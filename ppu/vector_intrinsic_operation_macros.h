




namespace rw
{

namespace math
{

namespace vpu
{

typedef __attribute__((altivec(vector__))) unsigned char VectorPermuteControl;

namespace detail
{

    enum VectorPermSource
    {
        X0,
        Y0,
        Z0,
        W0,
        X1,
        Y1,
        Z1,
        W1
    };

    template<VectorPermSource xsrc, VectorPermSource ysrc, VectorPermSource zsrc, VectorPermSource wsrc>
    struct VectorPermuteConstant
    {
        static const __attribute__((altivec(vector__))) unsigned char value;
    };

    template<VectorPermSource xsrc, VectorPermSource ysrc, VectorPermSource zsrc, VectorPermSource wsrc>
    const __attribute__((altivec(vector__))) unsigned char VectorPermuteConstant<xsrc, ysrc, zsrc, wsrc>::value =
    {
        ((xsrc * 4) + 0),
        ((xsrc * 4) + 1),
        ((xsrc * 4) + 2),
        ((xsrc * 4) + 3),
        ((ysrc * 4) + 0),
        ((ysrc * 4) + 1),
        ((ysrc * 4) + 2),
        ((ysrc * 4) + 3),
        ((zsrc * 4) + 0),
        ((zsrc * 4) + 1),
        ((zsrc * 4) + 2),
        ((zsrc * 4) + 3),
        ((wsrc * 4) + 0),
        ((wsrc * 4) + 1),
        ((wsrc * 4) + 2),
        ((wsrc * 4) + 3),
    };

}





























































































































































inline __attribute__ ((always_inline)) ::rw::math::vpu::VectorIntrinsic RW_MATH_VPU_CreateVectorFromScalar_R(float f0)
{
    ::rw::math::vpu::VectorIntrinsic ret;
    { ::rw::math::vpu::detail::VectorIntrinsicUnion u; u.scalarFloat[0] = f0; u.scalarFloat[1] = f0; u.scalarFloat[2] = f0; u.scalarFloat[3] = f0; ret = u.vector; };
    return ret;
}














































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































}

}

}
